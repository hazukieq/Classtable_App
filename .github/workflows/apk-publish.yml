name: Build and Release

on:
 push:
   branches:
     - master
     - "feature/*"
   tags:
     - "v*.*.*"
 pull_request:
   branches:
     - master
     - "feature/*"

jobs:
 apk:
   name: Generate APK
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v3.3.0
     - name: Branch name
       run: echo running on branch ${GITHUB_REF##*/}
     - name: Setup JDK
       uses: actions/setup-java@v3.10.0
       with:
         distribution: temurin
         java-version: "11.0"
     - name: Checkout Anroid Keystore
       uses: actions/checkout@v3.3.0
       with:
         repository: hazukieq/appjks
         ref: main
         token: ${{ secrets.GH_PAT }}
         path: appjks
     - name: Build APK
       run: bash ./gradlew assembleRelease --stacktrace

 release:
   name: Release APK
   needs: apk
   runs-on: ubuntu-latest
   steps:
     - name: Get branch name
       id: branch-name
       uses: tj-actions/branch-names@v5.1
     - name: Print branch    
       run: |
         echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"
       
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: apk
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: ${{ github.ref }} ${{ steps.branch-name.outputs.current_branch }}
     - name: Get Apk Version
       uses: actions/github-script@v3
       id: get-version
       with:
         script: |
           const str=process.env.GITHUB_REF;
           return str.substring(str.indexOf("v"));
         result-encoding: string
     - name: Upload Release APK
       id: upload_release_asset
       uses: actions/upload-release-asset@v1.0.1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: app/build/outputs/apk/release/app-release.apk
         asset_name: Classtable(${{steps.branch-name.current_breanch}}_${{steps.get-version.outputs.result}}).apk
         asset_content_type: application/zip
     - name: Archive apks
       uses: actions/upload-artifact@v1
       with:
        name: apk
        path: app/build/outputs
        #asset_name: ${{ github.event.repository.name }}  ${{ steps.branch-name.outputs.current_branch }} v${{ github.run_number }}.${{ github.run_attempt }}.apk
