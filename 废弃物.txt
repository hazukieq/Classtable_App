
    /*@SuppressLint("NotifyDataSetChanged")
    private void initCls(View root, BottomSheetDialog dialog,boolean IspresetValues,ClassLabel clz){

        ScrollView scrollView=root.findViewById(R.id.class_scrolle);
        TextView class_courseName=root.findViewById(R.id.class_subject);
        TextView class_place=root.findViewById(R.id.class_classroom);
        TextView class_startCl=root.findViewById(R.id.class_spinner_start_date);
        TextView class_clnums=root.findViewById(R.id.class_spinner_date_nums);
        TextView class_planote=root.findViewById(R.id.class_notes);
        TextView class_weekdate=root.findViewById(R.id.class_spinner_weekdate);
        class_spinner_date=root.findViewById(R.id.class_spinner_date);
        TextView color_spinner=root.findViewById(R.id.class_color);
        TextView confirm=root.findViewById(R.id.class_confirm_btn);
        TextView cancel=root.findViewById(R.id.class_cancel_btn);

        scrollView.setNestedScrollingEnabled(true);
        if(IspresetValues){
            class_courseName.setText(clz.subjectName);
            class_place.setText(clz.clRoom);
            class_startCl.setText("第"+(clz.startCl+1)+"节课");
            class_clnums.setText(clz.clNums+"节");
            class_planote.setText(clz.plaNote);
            class_weekdate.setText(Statics.getWeekByIndex(clz.week));
            class_spinner_date.setText(Statics.getDetailTimeByIndex(clz.detailTime));
            color_spinner.setBackgroundColor(getColor(ColorSeletor.getColorByIndex(clz.color)));
            color_spinner.setText(ColorSeletor.getColorStringByIndex(clz.color));

        }

        //采用作息时间值
        Unimodel[] starts=Statics.generateStartCls(5,9,12,12);

        class_startCl.setOnClickListener(v->showBottomList("开始节次",class_startCl,starts,2));

        class_clnums.setOnClickListener(v->showBottomList("上课节数",class_clnums,Statics.generateNums(20),0));

        class_weekdate.setOnClickListener(v->showBottomList("星期",class_weekdate,Statics.weekTimes,0));

        color_spinner.setOnClickListener(v->showBottomList("颜色",color_spinner, ColorSeletor.colorStrings,1));

        confirm.setOnClickListener(v->{
            //上课节数
            int clnums=Integer.parseInt(class_clnums.getText().toString().replace("节",""));
            //开始节次
            int startcl=Integer.parseInt(class_startCl.getText().toString().replaceAll("第(.{1,2})节课","$1"))-1;
            //星期
            int week=Statics.returnArrayIndex(Statics.SearchMode.weeks,class_weekdate.getText().toString());
            //具体时间
            int detail_time=Statics.returnArrayIndex(Statics.SearchMode.details,class_spinner_date.getText().toString());
            //科目
            String subject=class_courseName.getText().toString();
            //位置
            String place=class_place.getText().toString();
            //备注
            String planote=class_planote.getText().toString();
            //颜色
            int color=ColorSeletor.getColorIndexByString(color_spinner.getText().toString());

            //更新值
            clz.updateValues(clnums,startcl,week,detail_time,subject,place,planote,color);

*//*           clz.clNums=clnums;
            clz.startCl=startcl;
            clz.week=week;
            clz.detailTime=detail_time;
            clz.subjectName=subject;
            clz.clRoom=place;
            clz.plaNote=planote;
            clz.color=color;*//*
            ClassLabel cls_=new ClassLabel(clnums,startcl,week,detail_time,subject,place,planote,color);

            //如果是已有卡片上，则编辑；反之采用另一种
            if(IspresetValues){
                try{
                    //参考系
                    int index_=multifilter.indexOf(clz);
                    multiTypeAdapter.notifyItemChanged(index_,"updating");
                }catch (Exception e){
                    e.printStackTrace();
                }
                dialog.dismiss();
            }else{
                List<ClassLabel> same_list=CheckUtil.findSpecificItems(multi_all,week,detail_time);
                int check=CheckUtil.CompareDuplicateOrNot(same_list,startcl,clnums,5);
                if(check==1){
                    Toast.makeText(this, "重复了！", Toast.LENGTH_SHORT).show();
                }else if(check==2){
                    Toast.makeText(this, "当前卡片上课节数已超出"+class_spinner_date.getText().toString()+"总节数！", Toast.LENGTH_SHORT).show();
                }else{
                    multi_all.add(cls_);
                    multifilter.add(cls_);
                    multiTypeAdapter.notifyDataSetChanged();
                    dialog.dismiss();
                }
            }

        });

        cancel.setOnClickListener(v->dialog.dismiss());
    }*/